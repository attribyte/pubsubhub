<project name="pubsubhub" default="dist" xmlns:ivy="antlib:org.apache.ivy.ant">

    <description>Builds the Attribyte, LLC pubsubhub project</description>

    <property name="jdkVersion" value="1.8" />

    <property name="src" location="src" />
    <property name="build" location="build" />
    <property name="build-test" location="build_test" />
    <property name="dist" location="dist" />
    <property name="doc" location="doc" />

    <property name="groupId" value="org.attribyte" />
    <property name="artifactId" value="pubsubhub-server" />
    <property name="version" value="1.0.0" />

    <property name="jar" value="${dist}/lib/${artifactId}-${version}.jar" />
    <property name="javadoc-jar" value="${dist}/lib/${artifactId}-${version}-javadoc.jar" />
    <property name="sources-jar" value="${dist}/lib/${artifactId}-${version}-sources.jar" />


    <property name="ivy.install.version" value="2.3.0" />
    <condition property="ivy.home" value="${env.IVY_HOME}">
        <isset property="env.IVY_HOME" />
    </condition>
    <property name="ivy.home" value="${user.home}/.ant" />
    <property name="ivy.jar.dir" value="${ivy.home}/lib" />
    <property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar" />

    <target name="download-ivy" unless="offline">
        <mkdir dir="${ivy.jar.dir}"/>
        <!-- Download ivy from Maven Central -->
        <get src="https://repo1.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar"
             dest="${ivy.jar.file}" usetimestamp="true"/>
    </target>

    <target name="init-ivy" depends="download-ivy">
        <!-- Check to see if ivy exists. If not, install it. -->
        <path id="ivy.lib.path">
            <fileset dir="${ivy.jar.dir}" includes="*.jar"/>
        </path>
        <taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
    </target>

    <path id="classpath">
        <fileset refid="ivy.fileset"/>
        <pathelement location="${build}"/>
        <!--
        <fileset dir="testlib">
            <include name="**/*.jar"/>
        </fileset>
        -->
    </path>

    <target name="resolve" description="Use ivy to resolve classpaths">
        <ivy:resolve/>
        <ivy:cachefileset setid="ivy.fileset" conf="compile"/>
    </target>

    <target name="init" depends="resolve">
        <mkdir dir="${build}"/>
        <mkdir dir="${dist}/lib"/>
        <mkdir dir="${dist}/extlib"/>
        <mkdir dir="${dist}/doc/javadoc"/>
    </target>

    <target name="compile" depends="init" description="Compiles the source">
        <javac includeantruntime="false" srcdir="${src}/main/java" destdir="${build}" debug="on">
            <compilerarg value="-Xlint"/>
            <classpath refid="classpath"/>
        </javac>
    </target>

    <target name="compile-test" depends="compile" description="Compiles the test source">
        <mkdir dir="${build-test}"/>
        <javac includeantruntime="false" srcdir="${src}/test/java" destdir="${build-test}" debug="on">
            <classpath refid="classpath"/>
        </javac>
    </target>

    <target name="dist" depends="compile" description="Creates the distribution">
        <mkdir dir="${dist}/lib"/>
        <mkdir dir="${dist}/extlib"/>
        <jar jarfile="${jar}" basedir="${build}"/>
    </target>

    <target name="full-dist" depends="dist" description="Creates the distribution with a copy of all dependencies">
        <ivy:retrieve pattern="${dist}/extlib/[organisation]-[artifact]-[revision].[ext]"
                      conf="compile"/>
    </target>

    <target name="clean" description="Removes all build files">
        <delete dir="${build}"/>
        <delete dir="${build-test}"/>
        <delete dir="${dist}"/>
    </target>

    <target name="cleandoc" description="Remove all generated doc files">
        <delete dir="${doc}/javadoc"/>
    </target>

    <target name="javadoc">
        <javadoc
                access="public"
                destdir="${doc}/javadoc"
                author="true"
                version="true"
                linksource="false"
                use="true"
                windowtitle="org.attribyte"
                sourcepath="../http-model/src/main/java;../shared-base/src/main/java;../acp/src/main/java"
                >
            <fileset dir="${src}/main/java" defaultexcludes="yes">
                <include name="**/*.java"/>
            </fileset>
        </javadoc>
    </target>

    <target name="test" depends="compile-test" description="Runs H2 tests">
        <junit printsummary="on" haltonfailure="yes">
            <classpath>
                <path refid="classpath"/>
                <pathelement path="${build}"/>
                <pathelement path="${build-test}"/>
            </classpath>
            <batchtest fork="yes">
                <fileset dir="${src}/test/java">
                    <include name="**/H2DatastoreTest.java"/>
                </fileset>
            </batchtest>
        </junit>
    </target>

    <target name="test-mysql" depends="compile-test" description="Runs MySQL tests">
        <junit printsummary="on" haltonfailure="yes">
            <classpath>
                <path refid="classpath"/>
                <pathelement path="${build}"/>
                <pathelement path="${build-test}"/>
            </classpath>
            <batchtest fork="yes">
                <fileset dir="${src}/test/java">
                    <include name="**/MySQLDatastoreTest.java"/>
                </fileset>
            </batchtest>
        </junit>
    </target>


</project>
